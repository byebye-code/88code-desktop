name: Cross-Platform Build Test (三环境构建测试)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # 核心：使用矩阵 strategy.matrix.os 来定义运行环境
    runs-on: ${{ matrix.os }}

    strategy:
      # 定义构建矩阵
      matrix:
        # 列出所有需要构建的操作系统环境
        os: [ubuntu-latest, macos-latest, windows-latest]
        # 可以指定要使用的 Bun 版本
        bun-version: [latest]

    steps:
      - name: 📝 检出代码
        uses: actions/checkout@v4

      - name: 🛠️ 设置 Bun (${{ matrix.bun-version }})
        # 使用官方 Action 来安装 Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: 📦 安装依赖 (bun install)
        # --frozen-lockfile 确保使用 package.json 的锁定文件
        run: bun install --frozen-lockfile
        # 注意：在 Windows 上，这个 run 语句会自动使用 PowerShell 或 CMD 执行。

      - name: 🔨 执行构建 (bun run build)
        run: bun run build

      # 可选步骤：如果构建成功，将构建产物打包上传，方便后续检查或部署
      - name: 💾 存档构建结果 (${{ matrix.os }})
        uses: actions/upload-artifact@v4
        with:
          # 不同的操作系统，构建产物的名称不同，方便区分
          name: build-artifacts-${{ matrix.os }}
          path: dist # 假设你的构建输出目录是 dist
          if-no-files-found: error # 如果没有找到 dist 目录，则报错
